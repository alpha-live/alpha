{"version":3,"sources":["img/Alpha1_05.jpg","component/utils.js","component/alpha.js","component/language.js","component/timer.js","component/accounts.js","App.js","serviceWorker.js","index.js","img/Alpha1_02.jpg"],"names":["module","exports","decimals","val","text","BigNumber","dividedBy","pow","toFixed","index","indexOf","charAt","length","i","substring","sub","config","name","contractAddress","github","author","url","logo","caddress","contract","serojs","callContract","alpha","seropp","init","rest","console","log","pk","callback","getAccountDetail","item","balance","Balance","has","get","PK","mainPKr","MainPKr","Name","getAccountList","data","accounts","forEach","push","code","from","self","this","callMethod","vals","detail","parentCode","childCodes","totalShareReward","childsTotalAmount","canWithdraw","records","returnIndex","value","timestamp","parseInt","subordinateInfo","info","closureTime","toNumber","fundAmount","investorCount","luckyCodes","split","codes","items","Array","count","isZero","toString","amount","childsCode","executeMethod","_method","_args","packData","callParams","to","call","callData","res","unPackData","args","executeData","gasPrice","cy","estimateParam","estimateGas","gas","executeContract","lang","e","Date","getTimezoneOffset","zh_CN","en_US","account","title","change","partake","withdraw","reinvestment","game","poolAmount","all","modal","cancel","submit","id","time","profit","state","recommend","invitationCode","inviteNumber","achievement","level","achieveDetail","Timer","props","delayTime","hour","minute","second","startCountDown","clearTimer","timer","clearInterval","setInterval","doCount","d","onTimeout","timeDiffSecond","getTime","Math","floor","setState","leftZero","className","style","position","left","Component","alert","operation","tenThousand","Accounts","formatAccount","slice","details","setTimeout","accountList","initAccount","accountDetails","initInfo","poolBalance","minus","fundBalance","valueInput","codeInput","multipliedBy","invest","ret","inputs","clear","ref","el","editable","placeholder","defaultValue","language","type","moneyKeyboardAlign","onPress","focus","actions","recordItems","map","record","status","div","days","Item","key","float","width","textAlign","subordinateInfos","statue","maxWidth","top","padding","onClick","src","Alpha1_02","Alpha1_05","bind","size","marginTop","renderHeader","changAccount","takePartIn","App","mixHeight","document","documentElement","clientHeight","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bec72168.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Alpha1_05.9d24b342.jpg\";","import BigNumber from \"bignumber.js\";\n\nexport function formatDate(time) {\n    const Y = time.getFullYear();\n    const M = getDate(time.getMonth() + 1);\n    const d = getDate(time.getDate());\n    const h = getDate(time.getHours());\n    const m = getDate(time.getMinutes());\n    // var s =getDate(time.getSeconds());\n    return `${Y}-${M}-${d} ${h}:${m}`;\n}\n\nfunction getDate(num) {\n    if (num < 10) {\n        return \"0\" + num;\n    } else {\n        return num;\n    }\n}\n\nfunction sub(text) {\n    for (var i = text.length - 1; i > 0; i--) {\n        if (text.charAt(i) != '0') {\n            if (text.charAt(i) == '.') {\n                return text.substring(0, i);\n            } else {\n                return text.substring(0, i + 1);\n            }\n        }\n    }\n}\n\nexport function decimals(val) {\n    let text = new BigNumber(val).dividedBy(new BigNumber(10).pow(18)).toFixed(18);\n    let index = text.indexOf(\".\");\n    if (index > -1 && text.charAt(text.length - 1) == '0') {\n        text = sub(text);\n    }\n\n    if (index != -1) {\n        if (text.substring(index + 1).length > 9) {\n            text = text.substring(0, index + 10);\n        }\n    }\n    return text;\n}","import serojs from 'serojs'\nimport seropp from 'sero-pp'\n// import Web3 from 'sero-web3'\nimport BigNumber from 'bignumber.js'\nimport {formatDate, decimals} from './utils'\n\nconst config = {\n    name: \"ALPHA\",\n    contractAddress: \"bqwLGykRqKaYRTCEpM4YEkpii3VR9z1Hbm5iSfJWkAZHa4S2bfGnkJky3UfoBjaAK6VvHrZfbpYviwokY7MYhpH\",\n    github: \"https://github.com/alpha-live/alpha\",\n    author: \"tom\",\n    url: \"http://alpha-live.gitee.io/alpha/index.html\",\n    logo: \"http://alpha-live.gitee.io/alpha/logo192.png\",\n}\n\nconst abi = [{\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"subordinateInfo\",\n    \"outputs\": [{\"name\": \"codes\", \"type\": \"string\"}, {\"name\": \"counts\", \"type\": \"uint256[]\"}, {\n        \"name\": \"amounts\",\n        \"type\": \"uint256[]\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"code\", \"type\": \"string\"}],\n    \"name\": \"invest\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"list\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256[]\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [{\"name\": \"\", \"type\": \"address\"}],\n    \"name\": \"indexs\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"info\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}, {\"name\": \"\", \"type\": \"uint256\"}, {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }, {\"name\": \"\", \"type\": \"uint256\"}, {\"name\": \"\", \"type\": \"string\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"withdraw\",\n    \"outputs\": [{\"name\": \"amount\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"name\": \"investors\",\n    \"outputs\": [{\"name\": \"id\", \"type\": \"uint256\"}, {\"name\": \"parentId\", \"type\": \"uint256\"}, {\n        \"name\": \"totalAmount\",\n        \"type\": \"uint256\"\n    }, {\"name\": \"currentShareReward\", \"type\": \"uint256\"}, {\n        \"name\": \"totalShareReward\",\n        \"type\": \"uint256\"\n    }, {\"name\": \"returnIndex\", \"type\": \"uint256\"}, {\n        \"components\": [{\n            \"name\": \"counts\",\n            \"type\": \"uint256[]\"\n        }, {\"name\": \"amounts\", \"type\": \"uint256[]\"}, {\"name\": \"childsCode\", \"type\": \"string\"}],\n        \"name\": \"subordinateInfo\",\n        \"type\": \"tuple\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"addr\", \"type\": \"address\"}],\n    \"name\": \"registerNode\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"closureTime\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"address\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [{\"name\": \"code\", \"type\": \"string\"}],\n    \"name\": \"details\",\n    \"outputs\": [{\"name\": \"slefCode\", \"type\": \"string\"}, {\n        \"name\": \"parentCode\",\n        \"type\": \"string\"\n    }, {\"name\": \"shareAmount\", \"type\": \"uint256\"}, {\"name\": \"canWithdraw\", \"type\": \"uint256\"}, {\n        \"name\": \"values\",\n        \"type\": \"uint256[]\"\n    }, {\"name\": \"timestamps\", \"type\": \"uint256[]\"}, {\"name\": \"returnIndex\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"fundAmount\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"reinvestment\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"marketAddr\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"address\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"newOwner\", \"type\": \"address\"}],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\"name\": \"_marketAddr\", \"type\": \"address\"}, {\"name\": \"_codeServiceAddr\", \"type\": \"address\"}],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\"indexed\": true, \"name\": \"previousOwner\", \"type\": \"address\"}, {\n        \"indexed\": true,\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n}];\nconst caddress = \"bqwLGykRqKaYRTCEpM4YEkpii3VR9z1Hbm5iSfJWkAZHa4S2bfGnkJky3UfoBjaAK6VvHrZfbpYviwokY7MYhpH\";\nconst contract = serojs.callContract(abi, caddress);\n\nclass Alpha {\n\n    constructor() {\n        seropp.init(config, function (rest) {\n            console.log(\"init\");\n        })\n    }\n\n\n    accountDetails(pk, callback) {\n        let self = this;\n        seropp.getAccountDetail(pk, function (item) {\n            let balance = \"0\";\n            if (item.Balance.has(\"SERO\")) {\n                balance = decimals(new BigNumber(item.Balance.get(\"SERO\")));\n            }\n            callback({pk: item.PK, mainPKr: item.MainPKr, name: item.Name, balance: balance})\n        });\n    }\n\n    accountList(callback) {\n        let self = this;\n        seropp.getAccountList(function (data) {\n            let accounts = [];\n            data.forEach(function (item, index) {\n                let balance = \"0\";\n                if (item.Balance.has(\"SERO\")) {\n                    balance = decimals(new BigNumber(item.Balance.get(\"SERO\")));\n                }\n                accounts.push({pk: item.PK, mainPKr: item.MainPKr, name: item.Name, balance: balance})\n            });\n            callback(accounts)\n        });\n    }\n\n\n    details(code, from, callback) {\n        let self = this;\n        this.callMethod('details', from, [code], function (vals) {\n            let detail;\n            if (vals === \"0x0\") {\n                detail = {\n                    code: \"\",\n                    parentCode: \"\",\n                    childCodes: [],\n                    totalShareReward: \"0\",\n                    childsTotalAmount: \"0\",\n                    canWithdraw: \"0\",\n                    records: [],\n                    returnIndex: 0\n                }\n            } else {\n                let records = [];\n                for (let i = vals[4].length - 1; i >= 0; i--) {\n                    records.push({\n                        value: new BigNumber(vals[4][i]),\n                        timestamp: parseInt(vals[5][i]),\n                    });\n                }\n                detail = {\n                    code: vals[0],\n                    parentCode: vals[1],\n                    childsTotalAmount: decimals(vals[2]),\n                    canWithdraw: decimals(vals[3]),\n                    records: records,\n                    returnIndex: parseInt(vals[6])\n                }\n            }\n            self.subordinateInfo(from, function (info) {\n                detail.subordinateInfo = info;\n                callback(detail);\n            });\n        });\n    }\n\n    info(from, callback) {\n        this.callMethod('info', from, [], function (vals) {\n            callback({\n                closureTime: vals[0].toNumber(),\n                balance: vals[1],\n                fundAmount: vals[2],\n                investorCount: parseInt(vals[3]),\n                luckyCodes: vals[4].split(\" \")\n            });\n        });\n    }\n\n    subordinateInfo(from, callback) {\n        this.callMethod('subordinateInfo', from, [], function (vals) {\n            let codes = [];\n            let items = new Array();\n            if (vals !== \"0x0\") {\n                if (vals[0] !== \"\") {\n                    codes = vals[0].split(\" \");\n                }\n\n                for (let i = 0; i < 20; i++) {\n                    let count = vals[1][i];\n                    if (count.isZero()) {\n                        break;\n                    }\n                    items.push({count: count.toString(), amount: vals[2][i].toString()});\n                }\n            }\n            callback({\n                childsCode: codes,\n                items: items\n            });\n        });\n    }\n\n    reinvestment(from, callback) {\n        this.executeMethod('reinvestment', from, [], 0, callback);\n    }\n\n    invest(from, value, code, callback) {\n        this.executeMethod('invest', from, [code], value, callback);\n    }\n\n    withdraw(from, callback) {\n        this.executeMethod('withdraw', from, [], 0, callback);\n    }\n\n    callMethod(_method, from, _args, callback) {\n        let that = this;\n        let packData = contract.packData(_method, _args);\n        let callParams = {\n            from: from,\n            to: caddress,\n            data: packData\n        }\n\n        seropp.call(callParams, function (callData) {\n            if (callData !== \"0x\") {\n                let res = contract.unPackData(_method, callData);\n                if (callback) {\n                    callback(res);\n                }\n            } else {\n                callback(\"0x0\");\n            }\n        });\n    }\n\n\n    executeMethod(_method, from, args, value, callback) {\n        let that = this;\n\n        let packData = contract.packData(_method, args);\n        let executeData = {\n            from: from,\n            to: caddress,\n            value: \"0x\" + value.toString(16),\n            data: packData,\n            gasPrice: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: \"SERO\",\n        };\n        let estimateParam = {\n            from: from,\n            to: caddress,\n            value: \"0x\" + value.toString(16),\n            data: packData,\n            gasPrice: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: \"SERO\",\n        }\n        seropp.estimateGas(estimateParam, function (gas) {\n            executeData[\"gas\"] = gas;\n            seropp.executeContract(executeData, function (res) {\n                if (callback) {\n                    callback(res)\n                }\n            })\n        });\n    }\n}\n\nconst alpha = new Alpha();\nexport default alpha;\n","class Language {\n\n    e = () => {\n        let localUtc = new Date().getTimezoneOffset() / 60;\n        if (localUtc === -8) {\n            return this.zh_CN;\n        } else {\n            return this.en_US;\n        }\n    }\n\n    en_US = {\n        account: {\n            title: \"Account\",\n            change: \"change\",\n            balance: \"balance\",\n            partake: \"partake\",\n            withdraw: \"withdraw\",\n            reinvestment: \"reinvestment\",\n            amount: \"amount\",\n            game:{\n                title:\"game start\",\n                poolAmount:\"资金池\",\n                fundAmount: \"保障基金\",\n                all:\"总金额\"\n            },\n            modal: {\n                title: \"partake\",\n                code: \"invitation code\",\n                value: \"value\",\n                cancel: \"cancel\",\n                submit: \"submit\"\n            },\n            records: {\n                id:\"ID\",\n                title: \"Records\",\n                time: \"Time\",\n                amount: \"Amount\",\n                profit: \"Profit\",\n                state:\"State\"\n            },\n            recommend: {\n                title: \"recommend info\",\n                invitationCode: \"invitation code\",\n                inviteNumber: \"number of invitations\",\n                achievement: \"achievement\",\n\n                level:\"Level\",\n                count:\"Count\",\n                achieveDetail:\"Achievement\",\n                state:\"State\",\n            }\n        }\n    };\n\n\n    zh_CN = {\n        account: {\n            title: \"我的账户\",\n            change: \"切换\",\n            balance: \"账户余额\",\n            partake: \"投资\",\n            withdraw: \"提现\",\n            reinvestment: \"复投\",\n            amount: \"收益合集\",\n            game:{\n                title:\"保障基金[启动中]\",\n                poolAmount:\"资金池\",\n                fundAmount: \"保障基金\",\n                all:\"总金额\"\n            },\n            modal: {\n                title: \"投资\",\n                code: \"推荐码\",\n                value: \"金额\",\n                cancel: \"取消\",\n                submit: \"提交\"\n            },\n            records: {\n                id:\"序号\",\n                title: \"我的投资\",\n                time: \"到期时间\",\n                amount: \"本金\",\n                profit: \"收益\",\n                state:\"状态\"\n            },\n            recommend: {\n                title: \"我的业绩\",\n                invitationCode: \"分享码\",\n                inviteNumber: \"直推人数\",\n                achievement: \"直推业绩\",\n\n                level:\"层级\",\n                count:\"人数\",\n                achieveDetail:\"业绩\",\n                state:\"状态\",\n\n            }\n        }\n    }\n}\n\nconst lang = new Language();\nexport default lang","import React, {Component} from 'react';\n\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n        this.delayTime = this.props.delayTime;\n        this.state = {\n            hour: \"00\",\n            minute: \"00\",\n            second: \"00\",\n        }\n    }\n\n    componentDidMount() {\n        this.startCountDown();\n    }\n\n    componentDidUpdate() {\n        if (this.props.time !== this.delayTime) {\n            this.delayTime = this.props.delayTime;\n\n            this.clearTimer();\n            this.startCountDown();\n        }\n    }\n\n    clearTimer() {\n        if (this.timer) {\n            clearInterval(this.timer);\n            this.timer = null;\n        }\n    }\n\n    // 开启计时\n    startCountDown() {\n        if (this.delayTime && !this.timer) {\n            this.timer = setInterval(() => {\n                this.doCount();\n            }, 1000);\n        }\n    }\n\n    leftZero(d) {\n        if (d < 10) {\n            return \"0\" + d;\n        } else {\n            return \"\" + d;\n        }\n    }\n\n    doCount() {\n        const {onTimeout,} = this.props;\n        const timeDiffSecond = this.delayTime - new Date().getTime() / 1000;\n\n        if (timeDiffSecond <= 0) {\n            this.clearTimer();\n            if (typeof onTimeout === 'function') {\n                onTimeout();\n            }\n            return;\n        }\n\n        const hour = Math.floor((timeDiffSecond % 86400) / 3600);\n        const minute = Math.floor((timeDiffSecond % 3600) / 60);\n        const second = Math.floor((timeDiffSecond % 3600) % 60);\n\n\n        this.setState({\n            hour: this.leftZero(hour),\n            minute: this.leftZero(minute),\n            second: this.leftZero(second),\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"clock\">\n\n                <span style={{position: \"relative\", left: \"-23px\"}}>{this.state.hour[0]}</span>\n                <span style={{position: \"relative\", left: \"-16px\"}}>{this.state.hour[1]}</span>\n\n                <span style={{position: \"relative\", left: \"-2px\"}}>{this.state.minute[0]}</span>\n                <span style={{position: \"relative\", left: \"3px\"}}>{this.state.minute[1]}</span>\n\n                <span style={{position: \"relative\", left: \"17px\"}}>{this.state.second[0]}</span>\n                <span style={{position: \"relative\", left: \"24px\"}}>{this.state.second[1]}</span>\n            </div>\n        );\n    }\n}\n\nexport default Timer;","import React, {Component} from 'react';\nimport {Modal, Flex, List, WhiteSpace, WingBlank, InputItem, Button} from \"antd-mobile\";\nimport alpha from \"./alpha\";\nimport BigNumber from 'bignumber.js'\nimport {formatDate, decimals} from './utils'\nimport language from './language'\nimport Alpha1_02 from '../img/Alpha1_02.jpg'\nimport Alpha1_05 from '../img/Alpha1_05.jpg'\nimport Timer from \"./timer\";\n\nconst alert = Modal.alert;\nconst operation = Modal.operation;\nconst tenThousand = new BigNumber(\"10000000000000000000000\");\n\nclass Accounts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: {\n                pk: \"\",\n                balance: 0,\n                details: {\n                    code: \"\",\n                    parentCode: \"\",\n                    childCodes: [],\n                    childsTotalAmount: \"0\",\n                    canWithdraw: \"0\",\n                    records: [],\n                    returnIndex: 0,\n                    subordinateInfo: {items: [], childsCode: []}\n                }\n            }, info: {closureTime: 0}\n        }\n    }\n\n    componentDidMount() {\n        let self = this;\n        setTimeout(function () {\n            alpha.accountList(function (accounts) {\n                self.initAccount(accounts[0]);\n                setInterval(function () {\n                    alpha.accountDetails(self.state.account.pk, function (account) {\n                        self.initAccount(account);\n                    });\n                }, 10 * 1000);\n            });\n\n            self.initInfo();\n            self.timer = setInterval(self.initInfo(), 20 * 1000);\n        }, 500)\n    }\n\n    formatAccount = (pk) => {\n        return pk.slice(0, 8) + \"...\" + pk.slice(-8)\n    }\n\n    initAccount(account) {\n        let self = this;\n        if (account) {\n            alpha.details(\"\", account.mainPKr, function (details) {\n                account.details = details;\n                self.setState({account: account});\n            });\n        }\n    }\n\n    onTimeout() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    initInfo() {\n        let self = this;\n        alpha.info(this.state.account.mainPKr, function (info) {\n\n            if (info.closureTime != 0) {\n                self.setState({\n                    info: {\n                        closureTime: info.closureTime,\n                        balance: decimals(info.balance),\n                        poolBalance: decimals(info.balance.minus(info.fundAmount)),\n                        fundBalance: decimals(info.fundAmount)\n                    }\n                })\n            } else {\n                self.setState({\n                    info: {\n                        closureTime: 0\n                    }\n                });\n            }\n        });\n    }\n\n\n    invest() {\n        let value = this.valueInput.state.value;\n        if (!value) {\n            alert(\"please input value\");\n            return\n        }\n        let code = \"\";\n        if (this.state.account.details.code === \"\") {\n            code = this.codeInput.state.value;\n            if (!code) {\n                alert(\"please input code\");\n                return\n            }\n        }\n\n        value = new BigNumber(value).multipliedBy(new BigNumber(10).pow(18));\n        alpha.invest(this.state.account.pk, value, code, function (ret) {\n        });\n    }\n\n    withdraw() {\n        if (this.state.account.details.canWithdraw !== \"0\") {\n            alpha.withdraw(this.state.account.pk, function (ret) {\n            });\n        }\n    }\n\n    reinvestment() {\n        if (this.state.account.details.canWithdraw !== \"0\") {\n            alpha.reinvestment(this.state.account.pk, function (ret) {\n            });\n        }\n\n    }\n\n    takePartIn() {\n        let inputs = <div>\n            <InputItem clear ref={el => {\n                this.codeInput = el\n            }} editable={this.state.account.details.code === \"\"} placeholder=\"code\"\n                       defaultValue={this.state.account.details.parentCode}><span\n                className=\"column-title\">{language.e().account.modal.code}:</span></InputItem>\n\n            <InputItem type='money' clear moneyKeyboardAlign='left' ref={el => {\n                this.valueInput = el\n            }} placeholder=\"value\"\n                       defaultValue='500'><span>{language.e().account.modal.value}:</span></InputItem>\n        </div>\n        alert(<span>{language.e().account.modal.title}</span>, inputs, [\n            {text: <span>{language.e().account.modal.cancel}</span>},\n            {text: <span>{language.e().account.modal.submit}</span>, onPress: () => this.invest()},\n        ])\n        if (this.state.account.details.code === \"\") {\n            this.codeInput.focus();\n        } else {\n            this.valueInput.focus();\n        }\n    }\n\n    changAccount() {\n        let self = this;\n        alpha.accountList(function (accounts) {\n            let actions = [];\n            accounts.forEach(function (account, index) {\n                actions.push(\n                    {\n                        text: <span>{account.name + \":\" + self.formatAccount(account.pk)}</span>, onPress: () => {\n                            self.initAccount(account);\n                        }\n                    }\n                );\n            });\n            operation(actions);\n        });\n    }\n\n    render() {\n        let self = this;\n        let pk = this.state.account.pk;\n        if (pk != \"\") {\n            pk = this.formatAccount(pk);\n        }\n\n        let recordItems = this.state.account.details.records.map(\n            (record, index) => {\n                let returnIndex = self.state.account.details.returnIndex;\n                let status = \"已结算\";\n                let profit = decimals(record.value.multipliedBy(15).div(100));\n                let days = 0;\n                if ((this.state.account.details.records.length - 1 - index) >= returnIndex) {\n                    days = Math.floor((new Date().getTime() - record.timestamp * 1000) / (60 * 1000));\n                    if (days > 15) {\n                        days = 15;\n                        status = '可提现';\n                    } else {\n                        profit = decimals(record.value.multipliedBy(days).div(100))\n                        status = \"未到期\"\n                    }\n                }\n                return <List.Item key={index}>\n                    <div style={{float: \"left\", width: '10%', textAlign: 'center'}}><span\n                        className=\"column-title\">{index + 1}</span></div>\n                    <div style={{float: \"left\", width: '20%', textAlign: 'center'}}><span\n                        className=\"column-title\">{decimals(record.value)}</span></div>\n                    <div style={{float: \"left\", width: '20%', textAlign: 'center'}}><span\n                        className=\"column-title\">{profit}</span></div>\n                    <div style={{float: \"left\", width: '30%', textAlign: 'center'}}><span\n                        className=\"column-title\">{15 - days}</span></div>\n                    <div style={{float: \"left\", width: '20%', textAlign: 'center'}}><span\n                        className=\"column-title\">{status}</span></div>\n                </List.Item>\n            }\n        );\n\n        let achievement = 0;\n        let subordinateInfos = this.state.account.details.subordinateInfo.items.map(\n            (record, index) => {\n                let statue;\n                if (index == 0) {\n                    achievement = record.amount;\n                    statue = \"可拿\"\n                } else {\n                    statue = new BigNumber(achievement).div(tenThousand).toNumber() >= (index + 1) ? \"可拿\" : \"不\" + \"可拿\";\n                }\n\n                return <List.Item key={index}>\n                    <div style={{float: \"left\", width: '25%', textAlign: 'center'}}><span\n                        className=\"column-title\">{index + 1}</span></div>\n                    <div style={{float: \"left\", width: '25%', textAlign: 'center'}}><span\n                        className=\"column-title\">{record.count}</span></div>\n                    <div style={{float: \"left\", width: '25%', textAlign: 'center'}}><span\n                        className=\"column-title\">{decimals(record.amount)}</span></div>\n                    <div style={{float: \"left\", width: '25%', textAlign: 'center'}}><span\n                        className=\"column-title\">{statue}</span></div>\n                </List.Item>\n            }\n        )\n\n        return (\n            <div style={{maxWidth: '600px'}}>\n                <div style={{position: \"fixed\", top: \"0\", width: \"100%\", maxWidth: \"600px\"}}>\n                        <span style={{float: \"left\", padding: \"15px\"}} onClick={() => {\n                            Modal.alert(<span>合约规则</span>, <div className=\"contractRule\">\n                                合约地址:\n                                2BQWCtFGPZpHepKzmGDGWnPVuZqaem5hVM8T7decSXMRuz3oX1qBzsbAV8une2gzskUNMDEkdChHE8jEeMcr8tNwcK37RRfFzTGfZpnQdp5gkMmSYd2E22GRveU1Li3RVFPm<br/>\n                                推荐码: JFVVW2ITNSJHF\n\n                            </div>, [\n                                {text: <span>OK</span>}])\n                        }}>合约规则</span>\n                    <span style={{float: \"right\", padding: \"15px\"}}>简体中文</span>\n                </div>\n                <div className=\"header\">\n                    <img src={Alpha1_02} width=\"100%\"/><br/>\n\n                    {\n                        this.state.info.closureTime != 0 && <div>\n                            <img src={Alpha1_05} width=\"200\"/>\n                            <Timer delayTime={this.state.info.closureTime} onTimeout={this.onTimeout.bind(this)}/>\n                        </div>\n                    }\n\n                </div>\n                {\n                    this.state.info.closureTime != 0 && <WingBlank size=\"lg\" style={{marginTop: \"-30px\"}}>\n                        <List renderHeader={<span className=\"title\">保障基金[启动中]</span>}>\n                            <List.Item>\n                                <div>\n                                    <div style={{float: 'left', width: '30%', textAlign: 'center'}}><span\n                                        className=\"column-title\">资金池</span></div>\n                                    <div style={{float: 'left', width: '5%', textAlign: 'center'}}>&nbsp;</div>\n                                    <div style={{float: 'left', width: '30%', textAlign: 'center'}}><span\n                                        className=\"column-title\">保障基金</span></div>\n                                    <div style={{float: 'left', width: '5%', textAlign: 'center'}}>&nbsp;</div>\n                                    <div style={{float: 'left', width: '30%', textAlign: 'center'}}><span\n                                        className=\"column-title\">总金额</span></div>\n                                </div>\n                                <div>\n                                    <div style={{\n                                        float: 'left',\n                                        width: '30%',\n                                        textAlign: 'center'\n                                    }}>{this.state.info.poolBalance}</div>\n                                    <div style={{float: 'left', width: '5%', textAlign: 'center'}}><span\n                                        className=\"column-title\">+</span></div>\n                                    <div style={{\n                                        float: 'left',\n                                        width: '30%',\n                                        textAlign: 'center'\n                                    }}>{this.state.info.fundBalance}</div>\n                                    <div style={{float: 'left', width: '5%', textAlign: 'center'}}>=</div>\n                                    <div style={{\n                                        float: 'left',\n                                        width: '30%',\n                                        textAlign: 'center'\n                                    }}>{this.state.info.balance}</div>\n                                </div>\n                            </List.Item>\n\n                        </List>\n                    </WingBlank>\n                }\n\n                <WingBlank size=\"lg\">\n                    <List renderHeader={<span className=\"title\">{language.e().account.title}</span>}>\n                        <List.Item onClick={this.changAccount.bind(this)}>\n                            <div style={{float: 'left'}}>{pk}</div>\n                            <Button style={{float: 'right'}}>\n                                {language.e().account.change}\n                            </Button>\n                        </List.Item>\n                        <List.Item>\n                            <div\n                                style={{float: 'left'}}><span\n                                className=\"column-title\">{language.e().account.balance}:</span> <span\n                                className=\"column-value\">{this.state.account.balance}</span> SERO\n                            </div>\n                            <div style={{float: 'right'}}>\n                                <Button onClick={() => {\n                                    this.takePartIn()\n                                }}>{language.e().account.partake}</Button>\n                            </div>\n                        </List.Item>\n                        <List.Item>\n                            <div\n                                style={{float: 'left'}}><span\n                                className=\"column-title\">{language.e().account.amount}:</span> <span\n                                className=\"column-value\">{this.state.account.details.canWithdraw}</span> SERO\n                            </div>\n                            <div style={{float: 'right'}}>\n                                <div style={{float: 'left'}}>\n                                    <Button onClick={() => {\n                                        this.withdraw()\n                                    }}>{language.e().account.withdraw}</Button>\n                                </div>\n                                <div style={{float: 'right'}}>\n                                    <Button onClick={() => {\n                                        this.reinvestment()\n                                    }}>{language.e().account.reinvestment}</Button>\n                                </div>\n                            </div>\n                        </List.Item>\n                    </List>\n                </WingBlank>\n                <WhiteSpace size=\"lg\"/>\n                <WingBlank size=\"lg\">\n                    <List renderHeader={<span className=\"title\">{language.e().account.records.title}</span>}>\n                        <div className=\"item-header\">\n                            <div style={{float: \"left\", width: '10%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.records.id}</span></div>\n                            <div style={{float: \"left\", width: '20%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.records.amount}</span></div>\n                            <div style={{float: \"left\", width: '20%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.records.profit}</span></div>\n                            <div style={{float: \"left\", width: '30%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.records.time}</span></div>\n                            <div style={{float: \"left\", width: '20%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.records.state}</span></div>\n                        </div>\n\n                        {recordItems}\n                    </List>\n                </WingBlank>\n                <WhiteSpace size=\"lg\"/>\n                <WingBlank size=\"lg\">\n                    <List renderHeader={<span className=\"title\">{language.e().account.recommend.title}</span>}>\n                        <div className=\"item-header\">\n                            <div>\n                                <div><span\n                                    className=\"column-title\">{language.e().account.recommend.invitationCode}: </span>\n                                    <span className=\"column-value\">{this.state.account.details.code}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <List.Item>\n                            <div>\n                                <div style={{float: 'left', width: '40%',}}>\n                                    <span\n                                        className=\"column-title\">{language.e().account.recommend.inviteNumber}: </span>\n                                    <span\n                                        className=\"column-value\">{this.state.account.details.subordinateInfo.childsCode.length}</span>\n                                </div>\n                                <div style={{float: 'left', width: '60%',}}>\n                                    <span className=\"column-title\">{language.e().account.recommend.achievement}: </span>\n                                    <span className=\"column-title\">{decimals(achievement)} SERO</span>\n                                </div>\n                            </div>\n                        </List.Item>\n\n                        <div className=\"item-header\">\n                            <div style={{float: \"left\", width: '25%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.recommend.level}</span></div>\n                            <div style={{float: \"left\", width: '25%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.recommend.count}</span></div>\n                            <div style={{float: \"left\", width: '20%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.recommend.achieveDetail}</span></div>\n                            <div style={{float: \"left\", width: '25%', textAlign: 'center'}}><span\n                                className=\"column-title\">{language.e().account.recommend.state}</span></div>\n                        </div>\n                        {subordinateInfos}\n                    </List>\n                </WingBlank>\n                <div className=\"footer\">\n                    <p>风险投资 谨慎参与</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Accounts;","import React, {Component} from 'react';\nimport './App.css';\nimport Accounts from \"./component/accounts\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div style={{mixHeight: document.documentElement.clientHeight}}>\n                <Accounts/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Alpha1_02.1f8421d0.jpg\";"],"sourceRoot":""}